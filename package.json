{
  "name": "files-dev",
  "version": "0.1.0",
  "config": {
    "hc_version": "0.2.4",
    "zits_version": "1.12.0",
    "bin": "bin",
    "we_test_folder": "../we-main"
  },
  "private": true,
  "workspaces": [
    "webcomponents",
    "webapp",
    "we-applet"
  ],
  "scripts": {
    "postinstall"        : "mkdir -p artifacts",
    "install:submodules" : "bash scripts/install-submodules.sh $npm_package_config_hc_version",
    "install:rust"       : "bash submodules/hc-prebuilt/install-rust.sh",
    "install:hc"         : "bash submodules/hc-prebuilt/install-hc-cli.sh $npm_package_config_bin $npm_package_config_hc_version",
    "install:hash-zome"  : "bash submodules/hc-prebuilt/install-hash-zome.sh $npm_package_config_bin",
    "install:zits"       : "cargo install zits --version $npm_package_config_zits_version",
    "version"            : "$npm_package_config_bin/hc --version & holochain --version & lair-keystore --version & tsc --version",

    "extract:localize"   : "npm run localize:extract -w webcomponents && npm run localize:extract -w webapp",
    "build:localize"     : "npm run localize:build -w webcomponents && npm run localize:build -w webapp",

    "build:zomes"        : "CARGO_TARGET_DIR=target cargo build --release --target wasm32-unknown-unknown",
    "build:dna"          : "npm run build:zomes && mkdir -p artifacts && $npm_package_config_bin/hc dna pack -o artifacts/files.dna dna/workdir",
    "build:happ"         : "npm run build:dna && $npm_package_config_bin/hc app pack -o artifacts/files.happ dna/workdir",
    "build:webapp"       : "npm run build:localize && npm run build -w webcomponents && npm run dist -w webapp",
    "build:devtest"      : "npm run clean:hc & npm run build:happ && bash scripts/ts-bindings.sh && npm run build -w webcomponents && npm run build -w webapp",
    "dev:components"     : "npm run build:watch -w webcomponents",

    "devtest"            : "npm run build:devtest && concurrently \"npm run build:watch -w webcomponents\" \"npm run build:watch -w webapp\" \"npm run start:mem\"",
    "devtest:we"         : "npm run build:devtest && npm run devtest -w we-applet",
    "devtest:we:block"   : "npm run build:devtest && npm run devtest:block -w we-applet",

    "prodtest"           : "npm run dist -w webapp && cross-env HC_APP_PORT=$(port) HC_ADMIN_PORT=$(port) ADD_PROFILES=1 concurrently \"npm run dev:components\" \"npm run new-sandbox:mem\" \"sleep 7 && npm run start:ui -w webapp\"",

    "prodtestfull:we"    : "npm run build:devtest && npm run dist:we && npm run prodtest:we",

    "prodtest:we"        : "cross-env BOOTSTRAP_PORT=$(port) SIGNAL_PORT=$(port) concurrently \"npm run serve:run\" \"npm run prodtest:we-launch\"",
    "prodtest:we-launch" : "/c/Users/damien/AppData/Local/Programs/org.lightningrodlabs.we-electron-alpha/lightningrodlabs-we \"-b http://127.0.0.1:$BOOTSTRAP_PORT\" \"-s ws://127.0.0.1:$SIGNAL_PORT\" --dev-config we.prodtest.config.json --agent-num 1",

    "_save-ports"        : "echo $HC_APP_PORT > .hc_app_$INDEX && echo $HC_ADMIN_PORT > .hc_admin_$INDEX",
    "start:mem"          : "cross-env HC_APP_PORT=$(port) HC_ADMIN_PORT=$(port) HAPP_BUILD_MODE='Debug' ADD_PROFILES=1 concurrently \"npm run dev:components\" \"npm run new-sandbox:mem\" \"sleep 7 && npm run start:ui -w webapp\"",
    "start:local"        : "echo START:LOCAL $INDEX & cross-env HC_APP_PORT=$(port) HC_ADMIN_PORT=$(port) HAPP_BUILD_MODE='Debug' ADD_PROFILES=1 concurrently \"npm run _save-ports\" \"npm run dev:components\" \"npm run new-sandbox:local\" \"sleep 7 && npm run start:ui -w webapp\"",
    "start:public"       : "cross-env HC_APP_PORT=$(port) HC_ADMIN_PORT=$(port) HAPP_BUILD_MODE='Debug' ADD_PROFILES=1 concurrently \"npm run dev:components\" \"npm run new-sandbox:public\" \"sleep 7 && npm run start:ui -w webapp\"",

    "new-sandbox:mem"    : "RUST_LOG=warn WASM_LOG=warn echo \"pass\" | $npm_package_config_bin/hc s --piped -f=$HC_ADMIN_PORT generate artifacts/files.happ -a Files --run=$HC_APP_PORT network mem",
    "new-sandbox:public" : "RUST_LOG=warn WASM_LOG=warn echo \"pass\" | $npm_package_config_bin/hc s --piped -f=$HC_ADMIN_PORT generate artifacts/files.happ --run=$HC_APP_PORT -a Files network --bootstrap https://bootstrap.holo.host/ webrtc wss://signal.holo.host",
    "new-sandbox:local"  : "RUST_LOG=warn WASM_LOG=warn echo \"pass\" | $npm_package_config_bin/hc s --piped -f=$HC_ADMIN_PORT generate artifacts/files.happ --run=$HC_APP_PORT -a Files network --bootstrap http://127.0.0.1:$BOOTSTRAP_PORT webrtc ws://127.0.0.1:$SIGNAL_PORT",
    "serve:run"          : "$npm_package_config_bin/hc run-local-services --bootstrap-port $BOOTSTRAP_PORT --signal-port $SIGNAL_PORT",
    "serve:save"         : "echo SIGNAL_PORT=$SIGNAL_PORT && echo $SIGNAL_PORT > .hc_signalenv && echo $BOOTSTRAP_PORT > .hc_bootenv && echo BOOTSTRAP_PORT=$BOOTSTRAP_PORT",
    "serve"              : "cross-env BOOTSTRAP_PORT=$(cat .hc_bootenv) SIGNAL_PORT=$(cat .hc_signalenv) npm run serve:run",
    "network2"           : "npm run clean:hc & npm run build:devtest && cross-env BOOTSTRAP_PORT=$(port) SIGNAL_PORT=$(port) concurrently \"npm run serve:save\" \"npm run serve:run\" \"cross-env INDEX=0 npm run start:local\" \"sleep 1 && cross-env INDEX=1 npm run start:local\"",
    "network3"           : "npm run clean:hc & npm run build:devtest && cross-env BOOTSTRAP_PORT=$(port) SIGNAL_PORT=$(port) concurrently \"npm run serve:save\" \"npm run serve:run\" \"cross-env INDEX=0 npm run start:local\" \"sleep 1 && cross-env INDEX=1 npm run start:local\" \"sleep 2 && cross-env INDEX=2 npm run start:local\"",
    "network:we"         : "npm run clean:hc & npm run network:local2 -w we-applet",

    "local:sandbox"      : "echo INDEX $INDEX & echo PORTS $BOOTSTRAP_PORT $SIGNAL_PORT $HC_APP_PORT $HC_ADMIN_PORT & RUST_LOG=warn WASM_LOG=warn echo \"pass\" | $npm_package_config_bin/hc s --piped -f=$HC_ADMIN_PORT run $INDEX",
    "_local"             : "cross-env BOOTSTRAP_PORT=$(cat .hc_bootenv) SIGNAL_PORT=$(cat .hc_signalenv) HC_APP_PORT=$(cat .hc_app_$INDEX) HC_ADMIN_PORT=$(cat .hc_admin_$INDEX) HAPP_BUILD_MODE='Debug' ADD_PROFILES=1 concurrently \"npm run local:sandbox\" \"sleep 7 && npm run start:ui-only -w webapp\"",
    "local0"             : "cross-env INDEX=0 npm run _local",
    "local1"             : "cross-env INDEX=1 npm run _local",
    "local2"             : "cross-env INDEX=2 npm run _local",

    "launch"             : "echo pass | hc-launch --piped -n 1 artifacts/files.webhapp network mem",
    "launch:we"          : "echo pass | hc-launch --piped -n 1 artifacts/files-we_applet.webhapp network mem",

    "package:webapp"     : "rm -rf artifacts/files-webapp-ui.zip && cd webapp/dist && rm -f *.map && bestzip ../../artifacts/files-webapp-ui.zip * && cd ../../ && $npm_package_config_bin/hc web-app pack webapp/webhapp.workdir -o artifacts/files.webhapp",
    "package:we"         : "rm -rf artifacts/files-we_applet-ui.zip & cd we-applet/dist && rm -f *.map && bestzip ../../artifacts/files-we_applet-ui.zip * && cd ../../ && $npm_package_config_bin/hc web-app pack we-applet/webhapp.workdir -o artifacts/files-we_applet.webhapp",
    "cp:we"              : "cp artifacts/files-we_applet.webhapp $npm_package_config_we_test_folder/testing-applets",
    "dist:we"            : "npm run build -w we-applet && npm run package:we && npm run cp:we",

    "update-version"     : "bash scripts/update-version-number.sh $npm_package_version",
    "dl-test-release"    : "rm -rf release & mkdir -p release & gh release download manual-release -D release -R lightningrodlabs/files",

    "ls"                 : "cross-env pwd && cross-env ls ../we-main/testings-applets",
    "clean"              : "bash scripts/clean.sh",
    "clean:npm"          : "bash scripts/clean-npm.sh",
    "clean:hc"           : "rm -rf .hc* && rm -rf we-applet/.hc*",
    "clean:all"          : "git clean -f -x -d -e .idea && rm -rf submodules"

  },
  "devDependencies": {
    "@types/jest": "^29.5.1",
    "@types/ws": "^8.5.3",
    "bestzip": "^2.2.0",
    "concurrently": "^6.2.1",
    "concurrently-repeat": "^0.0.1",
    "cross-env": "^7.0.3",
    "jest": "^29.5.0",
    "new-port-cli": "^1.0.0",
    "ts-jest": "^29.1.0",
    "tslib": "^2.4.0",
    "typescript": "~5.2.0"
  },
  "dependencies": {
    "@holochain/client": "=0.16.7",
    "@ddd-qc/cell-proxy": "=0.21.0",
    "@ddd-qc/lit-happ": "=0.21.0",
    "@ddd-qc/profiles-dvm": "=0.22.5",
    "@ddd-qc/we-utils": "=0.21.3",
    "@ddd-qc/path-explorer": "=0.3.0",
    "@ddd-qc/delivery": "=0.9.2",
    "@holochain-open-dev/core-types": "0.7.0",
    "@holochain-open-dev/profiles": "=0.17.3",
    "@lightningrodlabs/we-applet": "0.14.0",
    "@shoelace-style/shoelace": "2.11.2",
    "@lit/context": "1.0.1",
    "@lit/localize": "0.12.1",
    "lit": "3.0.2"
  },
  "engines": {
    "npm": ">=7.0.0"
  }
}
